(ns tic-tac-toe\rule\tests
  (:require phel\test :refer [deftest is])
  (:require tic-tac-toe\rule))

(deftest rule-test
  (let [matrix (rule/create-matrix)]
    (is (= 3 (count matrix)))
    (is (= 3 (count (matrix 0))))))

(deftest value-map-test
  (let [matrix [[0 1 2] [8 0 0] [0 0 0]]]
    (is (= " " (rule/matrix-cell-char matrix {:x 0 :y 0})))
    (is (= "○" (rule/matrix-cell-char matrix {:x 0 :y 1})))
    (is (= "×" (rule/matrix-cell-char matrix {:x 0 :y 2})))
    (is (= "_" (rule/matrix-cell-char matrix {:x 1 :y 0})))))
