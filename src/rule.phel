(ns tic-tac-toe\rule)

(defn create-matrix []
  [[:blank :blank :blank]
   [:blank :blank :blank]
   [:blank :blank :blank]])

(def- value-map {:blank " "
                 :mine "●"
                 :yours "○"})

(defn matrix-cell-char [matrix {:x x :y y}]
  (let [value (get-in matrix [x y])]
    (or (value-map value) "_")))

(defn- check-line [matrix target p1 p2 p3]
  (and
    (= (get-in matrix p1) target)
    (= (get-in matrix p2) target)
    (= (get-in matrix p3) target)
    target))

(defn- check-lines [matrix target]
  (or
    (check-line matrix target [0 0] [0 1] [0 2])
    (check-line matrix target [1 0] [1 1] [1 2])
    (check-line matrix target [2 0] [2 1] [2 2])
    (check-line matrix target [0 0] [1 0] [2 0])
    (check-line matrix target [0 1] [1 1] [2 1])
    (check-line matrix target [0 2] [1 2] [2 2])
    (check-line matrix target [0 0] [1 1] [2 2])
    (check-line matrix target [0 2] [1 1] [2 0])))

(defn matrix-winner [matrix]
  (find identity (map (fn [x] (check-lines matrix x)) [:mine :yours])))
